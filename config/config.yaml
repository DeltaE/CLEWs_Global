scenario: 'Guyana'

startYear: 2021
endYear: 2050

# OSeMOSYS Global Inputs
daytype: False
dayparts:
# daypart : [start_hour (inclusive), end_hour (exclusive)]
  D1: [1, 13]
  D2: [13, 25]
seasons:
# season : [month 1, month 2, ...] (all inclusive)
  S1: [1, 2, 3, 4, 5, 6]
  S2: [7, 8, 9, 10, 11, 12]

timeshift: 0 # value between -11 and 12

# Spatial Parameters
geographic_scope:
  - "GUY"

# Set to True if transmission should be included
crossborderTrade: True

# Set to True if existing transmission capacities should be included
# from the Global Transmission Database (Brinkerink et al., 2024).
transmission_existing: True

# Set to True if planned transmission capacities should be included
# from the Global Transmission Database (Brinkerink et al., 2024).
transmission_planned: True

# Set to True if existing storage capacities should be included
# from the Global Energy Storage Database (DOE/Sandia).
# If custom nodes are defined in 'nodes_to_add' and you want to assign
# GESDB data to custom nodes you'll have to update 'GESDB_region_mapping'
# in 'resources/data/custom'.
storage_existing: True

# Set to True if planned storage capacities should be included
# from the Global Energy Storage Database (DOE/Sandia).
# If custom nodes are defined in 'nodes_to_add' and you want to assign
# GESDB data to custom nodes you'll have to update 'GESDB_region_mapping'
# in 'resources/data/custom'.
storage_planned: True

# Emission Parameters
emission_penalty:
# - [EMISSION, COUNTRY, START_YEAR, END_YEAR, VALUE]
# EXAMPLE:  - ["CO2", "IND", 2020, 2050, 2.1]
# where VALUE is in M$/MT CO2
 - ["CO2", "IND", 2021, 2050, 2.1]

# Investment Parameters
no_invest_technologies:
  - "CSP"
  - "WAV"
  - "URN"
  - "OTH"
  - "WAS"
  - "COG"
  - "GEO"
  - "BIO"
  - "PET"

# Result Parameters
results_by_country: True

# solver parameters
solver: "cbc" # cbc, cplex, gurobi

user_defined_capacity:
# technology: [capacity,
#              build_year,
#              first_year_of_expansion,
#              build_rate_per_year,
#              capex_cost,
#              efficiency]
# EXAMPLE:  PWRCOAINDWE01: [8, 2000, 2025, 5, 1100, 35]
# Units are in GW (capacity/build_rate_per_year), m$/GW (capex_cost),
# % (efficiency).

user_defined_capacity_transmission:
# entry: [technology,
#         capacity,
#         build_year,
#         first_year_of_expansion,
#         final_year_of_expansion,
#         build_rate_per_year,
#         capex_cost,
#         annual_fixed_O&M_cost,
#         variable_O&M_cost,
#         efficiency]
# EXAMPLE:  trn1: [TRNINDEAINDNE, 5, 1975, 2025, 2025, 0, 350, 13, 4, 95]
# Per technology, only the capacity, build_year, first_year_of_expansion,
# final_year_of_expansion and build_rate_per_year parameters can deviate
# from each other. For all other parameters only the last entry will be used.

user_defined_capacity_storage:
# entry: [technology,
#         capacity,
#         build_year,
#         first_year_of_expansion,
#         build_rate_per_year,
#         capex_cost,
#         annual_fixed_O&M_cost,
#         variable_O&M_cost,
#         roundtrip_efficiency]
# EXAMPLE:  sto1: [PWRSDSINDWE01, 2, 2010, 2025, 3, 1800, 40, 0, 87]
# Per technology, only the capacity and build_year
# parameters can deviate from each other. For all other
# parameters only the last entry will be used.
# Units are in GW (capacity/build_rate_per_year),
# m$/GW (capex_cost/annual_fixed_O&M_cost),
# $/MWh (variable_O&M_cost), % (roundtrip_efficiency).

transmission_parameters:
# technology_group: [Line CAPEX,
#                    Converter pair CAPEX,
#                    Line losses,
#                    AC/DC Converter pair losses,
#                    Fixed O&M costs,
#                    Variable O&M costs]
# Units are in $2020/MW/KM (Line CAPEX), $2020/MW (Converter pair CAPEX),
# %/1000km (Line losses), % (AC/DC Converter pair losses),
# % of total CAPEX/yr (Fixed O&M costs), $/MWh (Variable O&M costs).
  HVAC: [779, 95400, 6.75, 0, 3.5, 4]
  HVDC: [238, 297509, 3.5, 1.3, 3.5, 4]
  HVDC_subsea: [295, 297509, 3.5, 1.3, 3.5, 4]

storage_parameters:
# technology_group: [capex_cost,
#                    annual_fixed_O&M_cost,
#                    variable_O&M_cost,
#                    roundtrip_efficiency,
#                    duration]
# EXAMPLE:  SDS: [1938, 44.25, 0, 85, 4]
# Units are in m$/GW (capex_cost, annual_fixed_O&M_cost), $/MWh (variable_O&M_cost),
# % (roundtrip_efficiency), hours (duration = storage capacity (GWh)/Power rating (GW)).

nodes_to_add:
# - "AAAXX" where AAA is a 3-letter country code,
# specified in the "geographic scope"
# and XX is a 2-letter sub-regional node code.
# E.g. - "IDNSM" for a sub-regional node in Sumatra, Indonesia.

nodes_to_remove:
# - "AAAXX" where AAA is a 3-letter country code, and XX is a 2-letter
# sub-national code.
# E.g. - "INDNO" for the Northern India region that is part of the default OSeMOSYS
# Global workflow.

reserve_margin:
# RESERVE_MARGIN: [PERCENTAGE, START_YEAR, END_YEAR]
# Years for which there is no PERCENTAGE value will be interpolated
# EXAMPLE:  RM1: [10, 2025, 2050]

reserve_margin_technologies:
# TECHNOLOGY: PERCENTAGE,
# Specify the share of capacity (%) per technology that can contribute to the
# reserve margin. Technologies that are not listed are excluded from contributing.
# EXAMPLE:  CCG : 90
  BIO : 90
  CCG : 90
  COA : 90
  COG : 50
  CSP : 30
  GEO : 90
  HYD : 30
  OCG : 90
  OIL : 90
  OTH : 90
  PET : 90
  SPV : 0
  URN : 90
  WAS : 90
  WAV : 10
  WOF : 10
  WON : 10

emission_limit:
# - [EMISSION, COUNTRY, TYPE, YEAR, VALUE]
# where VALUE is emissions in million tonnes of CO2-equivalent and YEAR is
# when that constraint must be adhered to. All years between multiple emission
# constraints will be interpolated if TYPE is set to "LINEAR". If "POINT" is used
# it means that a singular year value is set without interpolation occuring in
# previous target years. A combination of TYPE targets can be set per EMISSION and
# COUNTRY yet only a single target per YEAR.
# EXAMPLE: - ["CO2", "IND", "LINEAR", 2050, 0]

min_generation_factors:
# TECHNOLOGY: [VALUE, COUNTRY, YEAR]
# where VALUE is minimum utilization (PJ) of a given technology. This can be
# used to constrain power plant output (generation), for example, to calibrate historical
# generation values.
# EXAMPLE:  OCG: [50, "IND", 2021]

max_availability_factors:
# [COUNTRY/NODE, TECHNOLOGY, START_YEAR, END_YEAR, VALUE]
# where VALUE is percentage (%) MAX availability of a given technology. This overwrites
# the default values from availability_factors.csv in resources/data. This parameter can
# be used to constrain the maximum output of technologies to, for example, mimic
# max generation policy targets.
# EXAMPLE: - ["IND", 'COA', 2030, 2050, 25]

fossil_capacity_targets:
# [NODE, TECHNOLOGY, START_YEAR, END_YEAR, SENSE, VALUE]
# where VALUE is the absolute (GW) capacity constraint and SENSE sets the type of constraint.
# E.g. 'ABS' sets a fixed value, 'MIN' sets a minimum capacity value and 'MAX' sets a maximum
# capacity value. Note that in case 'ABS' or 'MAX' is applied, the given value needs to be
# higher than the residual capacity of that technology in the given year otherwise the workflow
# will not complete. Targets can only be set at the nodal level.
# EXAMPLE: - ["INDNE", 'CCG', 2040, 2050, 'MIN', 10]

re_targets:
# TARGET: [COUNTRY/NODE, [TECHNOLOGY], START_YEAR, END_YEAR, VALUE]
# E.g. TO1: ["IND", [], "PCT", 2030, 2040, 60]
# E.g. TO2: ["INDSO", ['WOF', 'WON'], "PCT", 2025, 2045, 15]
# E.g. TO3: ["INDSO", ['WOF'], "ABS", 2040, 2050, 200]
# Targets can be set in absolute terms ("ABS", VALUE = GW) or in relative terms
# ("PCT", VALUE = %) where targets in relative terms represent the share of generation.
# For "PCT", targets can be set at national (e.g. "IND") and nodal levels (e.g. "INDSO")
# whereas "ABS" can only be set at nodal levels. For "PCT", a single technology can
# be set for the target (e.g. ["WOF"]) a technology subset can be set (e.g. ['WOF', 'WON'])
# or the TECHNOLOGY list can be left empty (e.g. []) as such that all renewable
# technologies contribute to the target. For "ABS", only one technology can be
# selected per target. Note that a combination of targets can be set that affect
# the same countries/nodes/technologies. This can be computationally intensive.
# EXAMPLE:  T01: ["", [], "PCT", 2048, 2050, 95]
# EXAMPLE:  T02: ["IND", [], "PCT", 2030, 2040, 60]
# EXAMPLE:  T03: ["INDSO", ['WOF','WON'], "PCT", 2025, 2045, 15]
# EXAMPLE:  T04: ["INDSO", ['WOF'], "ABS", 2040, 2050, 100]


# GeoCLEWs Inputs
# Country Code (Three letters)
country_name: "Guyana"

# Choose your preferred RCP (Representative Concentration Pathway) from the available options: RCP2.6, RCP4.5, RCP6.0, RCP8.5.
rcp: "RCP4.5"

# Admin region level
# 0 for national processing, admin level 0.
# 1 for processing at admin level 1.
admin_level: 0

# Aggregating regions
# If you are processing at admin level 1 and there are more than 7 regions, it is advised to group regions to speed up computational processing.
# "False" indicates no aggregation, "True" performs aggregation.
# Set to True to aggregate into groups.
aggregate: False

aggregate_region: []
# Number of regions to be grouped into one group
region_per_group: 10

# In the case of aggregation, there is an option to extract a specific region and avoid aggregation
# It is required to shapefile the first 3 letters of the specific region e.g. "TAI" refers to Taita Taveta county in Kenya.
#extract: False
#ext_region: "TAI"

# Coordinate and projection systems
# More info: http://epsg.io/
crs_WGS84: "EPSG:4326"
crs_proj: "EPSG:24821"

number_of_clusters: {

    'GUY': 4
}

# clewsy Inputs

# clewsy build parameterization yaml file
#   Variable definitions to update MoManI | Append/Update otoole models

Acronym_dict: {
  CCD: 'Country Code',
  RGN: 'Region Code',
  FLT: 'Filter Code',
  IND: 'Industry',
  RES: 'Residential',
  COM: 'Commercial',
  AGR: 'Agricultural',
  TRA: 'Transport',
  OTH: 'Other',
  BIO: 'Biomass',
  COA: 'Coal',
  CRU: 'Crude oil',
  DSL: 'Diesel',
  ELC001: 'Electricity from power plants',
  ELC002: 'Electricity from transmission',
  ELCCANAR01: 'Electricity from power plants in the Atlantic Region', #NS, PEI, NB
  ELCCANAR02: 'Electricity from transmission in the Atlantic Region',
  ELCCANNL01: 'Electricity from power plants in Newfoundland and Labrador',
  ELCCANNL02: 'Electricity from transmission in Newfoundland and Labrador',
  ELCCANON01: 'Electricity from power plants in Ontario',
  ELCCANON02: 'Electricity from transmission in Ontario',
  ELCCANAB01: 'Electricity from power plants in Alberta',
  ELCCANAB02: 'Electricity from transmission in Alberta',
  ELCCANBC01: 'Electricity from power plants in British Columbia',
  ELCCANBC02: 'Electricity from transmission in British Columbia',
  ELCCANQC01: 'Electricity from power plants in Quebec',
  ELCCANQC02: 'Electricity from transmission in Quebec',
  ELCCANSK01: 'Electricity from power plants in Saskatchewan',
  ELCCANSK02: 'Electricity from transmission in Saskatchewan',
  ELCCANMB01: 'Electricity from power plants in Manitoba',
  ELCCANMB02: 'Electricity from transmission in Manitoba',
  ELCCANNO01: 'Electricity from power plants in the Northern Region', #NT, NU, YT
  ELCCANNO02: 'Electricity from transmission in the Northern Region',
  GSL: 'Gasoline',
  HFO: 'Heavy fuel oil',
  NGS: 'Natural gas',
  KER: 'Kerosene',
  LPG: 'LPG',
  OHC: 'Other hydrocarbons',
  GEO: 'Geothermal',
  HYD: 'Hydropower',
  SOL: 'Solar',
  WND: 'Wind',
  CHC: 'Charcoal',
  PCK: 'Petroleum coke',
  JFL: 'Jet fuel',
# Naming Convention for AgriculturalResidualCapacity
  RAP: 'Rapeseed (canola)',
  MZE: 'Maize',
  WHT:  'Wheat',
  SWI: 'Switchgrass',
  HI:  'High intensity Irrigated',
  IR:  'Intermediate intensity Rainfed',
  II:  'Intermediate intensity Irrigated'
}

# Model external dependencies: Directories & Files
################################################################
Model: CLEWS-CAN
Debug: 0             # ASR- Note: 1= Debug probes on; 0= No debug probes
OutputFormat: append_otoole
OperationModes: 'optn_mds.txt'
otooleOutputDirectory: 'data-out'
DataDirectoryName: './data-inp/gaezclstr-can'
OsemosysGlobalPath: './data-inp/osemosys-can'
ClusterBaseFileName: clustering_results_
PrecipitationClusterBaseFileName: clustering_results_prc_
EvapotranspirationClusterBaseFileName: clustering_results_evt_
IrrigationWaterDeficitClusterBaseFileName: clustering_results_cwd_

# Model Time Space parameters: Years, Land, Regions,... TimeSlices
################################################################
Years:
  - 2021
  - 2022
  - 2023
  - 2024
  - 2025
  - 2026
  - 2027
  - 2028
  - 2029
  - 2030
  - 2031
  - 2032
  - 2033
  - 2034
  - 2035
  - 2036
  - 2037
  - 2038
  - 2039
  - 2040
  - 2041
  - 2042
  - 2043
  - 2044
  - 2045
  - 2046
  - 2047
  - 2048
  - 2049
  - 2050

LandRegions:
  - AB
  - BC
  - MB
  - NU
  - NB
  - NL
  - NS
  - NT
  - ON
  - PE
  - QC
  - SK
  - YT

LandToGridMap: {
  AB: CANAB, #Alberta
  BC: CANBC, #British Columbia
  MB: CANMB, #Manitoba
  NB: CANAR, #New Brunswick
  NL: CANNL, #Newfoundland and Labrador
  NS: CANAR, #Nova Scotia
  NT: CANNO, #Northwest Territories
  YT: CANNO, #Yukon
  NU: CANNO, #Nunavut
  PE: CANAR, #Prince Edward Island
  ON: CANON, #Ontario
  QC: CANQC, #Quebec
  SK: CANSK, #Saskatchewan
}

LandUseCodes: {
  BAR: Barren and sparsely vegetated land,
  FOR: Forest land,
  GRS: Grassland & woodland,
  BLT: Built-up land,
  WAT: Water bodies,
  OTH: Other agricultural land  # Do we need this at all???
}

Regions: {GLOBAL: ['Global', '#000000']}

Timeslices: { #data from osemosys_global
  SEA1BAS: ['Season 1 baseload', '#000000'],
  SEA1INT: ['Season 1 intermediate', '#cc9900'],
  SEA1PEK: ['Season 1 peak', '#00cc66'],
  SEA2BAS: ['Season 2 baseload', '#ffffcc'],
  SEA2INT: ['Season 2 intermediate', '#99ff66'],
  SEA2PEK: ['Season 2 peak', '#cc3333']
}

# Model Land, Water parameters: Irrigation type, Rainfed,...
################################################################
IntensityList: {
  L: Low,
  I: Intermediate,
  H: High
}

IrrigationTypeList: {
  R: Rain-fed,
  I: Irrigation
}

EvapotranspirationPercentPRCOtherLandUse: {
  # Percentages taken from Bolivia model by Abhi.
  BAR: 0.773,
  FOR: 0.691,
  GRS: 0.694,  # Numbers from Bolivia.  SET is settled, or BLT.
  BLT: 0.631,
  WAT: 0.571,
  OTH: 0.694   # Used GRS for OTH
}

GroundwaterPercentofExcessOtherLandUse: {
  # Since other land types are more likely to have a different ratio.
  BAR: 0.009,
  FOR: 0.077,
  GRS: 0.051,
  BLT: 0.072,  # Numbers from water ratios from Bolivia.  SET is BLT.
  WAT: 0.017,
  OTH: 0.051   # Used GRS for OTH
}

# Precent of excess water (Irrigation + Precipitation - Evapotranspiration) that returns as groundwater.  Rest returns as Runoff.
# GroundwaterPercentofExcess: Value for grassland. Need a better number...
GroundwaterPercentofExcess: 0.051

# Model Energy parameters: Fuels, Transformation Tech,...
################################################################
EndUseFuels: {
  IND: ['COA', 'LPG', 'KER', 'DSL', 'HFO', 'OHC', 'BIO', 'NGS', 'ELCCANAB02', 'ELCCANBC02', 'ELCCANMB02', 'ELCCANNL02', 'ELCCANNO02', 'ELCCANAR02', 'ELCCANON02', 'ELCCANQC02', 'ELCCANSK02'],
  RES: ['LPG', 'KER', 'BIO', 'NGS', 'ELCCANAB02', 'ELCCANBC02', 'ELCCANMB02', 'ELCCANNL02', 'ELCCANNO02', 'ELCCANAR02', 'ELCCANON02', 'ELCCANQC02', 'ELCCANSK02'],
  COM: ['KER', 'DSL', 'LPG', 'BIO', 'NGS', 'ELCCANAB02', 'ELCCANBC02', 'ELCCANMB02', 'ELCCANNL02', 'ELCCANNO02', 'ELCCANAR02', 'ELCCANON02', 'ELCCANQC02', 'ELCCANSK02'],
  AGR: ['DSL', 'ELCCANAB02', 'ELCCANBC02', 'ELCCANMB02', 'ELCCANNL02', 'ELCCANNO02', 'ELCCANAR02', 'ELCCANON02', 'ELCCANQC02', 'ELCCANSK02'],
  TRA: ['GSL', 'KER', 'DSL', 'HFO', 'NGS', 'ELCCANAB02', 'ELCCANBC02', 'ELCCANMB02', 'ELCCANNL02', 'ELCCANNO02', 'ELCCANAR02', 'ELCCANON02', 'ELCCANQC02', 'ELCCANSK02']
}

ImportFuels: ['COA', 'CRU', 'LPG', 'GSL', 'KER', 'DSL', 'HFO']

ExportFuels: ['COA', 'NGS', 'CRU', 'GSL', 'KER', 'HFO', 'BIO']

DomesticMining: ['COA', 'NGS', 'CRU']

DomesticRenewables: ['WND', 'HYD', 'BIO', 'SOL', 'GEO']

# Note:  Transformation technologies assume that their fuels are created elsewhere (either in the DomesticMining, DomesticRenewables or ImportFuels.
TransformationTechnologies: [
    ['PWRTRNA01', 'ELCCANAB01', '1.11', 'ELCCANAB02', '1', 'Power transmission Alberta', '1'],  # 90% efficient transmission system (losses)
    ['PWRTRNB01', 'ELCCANBC01', '1.11', 'ELCCANBC02', '1', 'Power transmission British Columbia', '1'],
    ['PWRTRNM01', 'ELCCANMB01', '1.11', 'ELCCANMB02', '1', 'Power transmission Manitoba', '1'],
    ['PWRTRNL01', 'ELCCANNL01', '1.11', 'ELCCANNL02', '1', 'Power transmission Newfoundland and Labrador', '1'],
    ['PWRTRNV01', 'ELCCANNO01', '1.11', 'ELCCANNO02', '1', 'Power transmission in the North', '1'],
    ['PWRTRNW01', 'ELCCANAR01', '1.11', 'ELCCANAR02', '1', 'Power transmission the Atlantic Region', '1'],
    ['PWRTRNO01', 'ELCCANON01', '1.11', 'ELCCANON02', '1', 'Power Transmission Ontario', '1'],
    ['PWRTRNQ01', 'ELCCANQC01', '1.11', 'ELCCANQC02', '1', 'Power Transmission Quebec', '1'],
    ['PWRTRNS01', 'ELCCANSK01', '1.11', 'ELCCANSK02', '1', 'Power transmission Saskatchewan', '1'],

    # Structure of data is:  [Tech, InFuel, IAR, OutFuel, OAR, Name, Mode]
    # If the FUEL is '' that piece will not be created.
    # Name is used only the first time this technology shows up.  Fuels are created only if needed.
    # If multiple lines for the same technology, this technology will have multiple input and output activity ratios.
    # Note:  This section can also be used to add input or output fuels to various technologies (cooling water, for example)

    #Switchgrass
    #17.45 from https://www.ieabioenergy.com/wp-content/uploads/2018/01/IEA_Bioenergy_Task43_PR2011-03.pdf
    #3.72 same as bio IAR from OG
    ['RNWBSW', 'CRPSWI', '1.0', 'BSWCAN', '17.45', 'Biomass production from Switchgrass.', '1'],
    ['RNWBCW', 'CRPSWI', '1.0', 'BCWCAN', '17.45', 'Biomass production with CCS.', '1'],

    ['PWRBSWCANAB01', 'BSWCAN', '3.72', 'ELCCANAB01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBSWCANAR01', 'BSWCAN', '3.72', 'ELCCANAR01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBSWCANBC01', 'BSWCAN', '3.72', 'ELCCANBC01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBSWCANMB01', 'BSWCAN', '3.72', 'ELCCANMB01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBSWCANNL01', 'BSWCAN', '3.72', 'ELCCANNL01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBSWCANNO01', 'BSWCAN', '3.72', 'ELCCANNO01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBSWCANON01', 'BSWCAN', '3.72', 'ELCCANON01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBSWCANQC01', 'BSWCAN', '3.72', 'ELCCANQC01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBSWCANSK01', 'BSWCAN', '3.72', 'ELCCANSK01', '1', 'Powerplant for Switchgrass Biofuel', '1'],

    ['PWRBCWCANAB01', 'BCWCAN', '3.72', 'ELCCANAB01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBCWCANAR01', 'BCWCAN', '3.72', 'ELCCANAR01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBCWCANBC01', 'BCWCAN', '3.72', 'ELCCANBC01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBCWCANMB01', 'BCWCAN', '3.72', 'ELCCANMB01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBCWCANNL01', 'BCWCAN', '3.72', 'ELCCANNL01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBCWCANNO01', 'BCWCAN', '3.72', 'ELCCANNO01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBCWCANQC01', 'BCWCAN', '3.72', 'ELCCANQC01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBCWCANSK01', 'BCWCAN', '3.72', 'ELCCANSK01', '1', 'Powerplant for Switchgrass Biofuel', '1'],
    ['PWRBCWCANON01', 'BCWCAN', '3.72', 'ELCCANON01', '1', 'Powerplant for Switchgrass Biofuel', '1']
]

# Power Plants: #Data from osemosys_global
PowerPlants: {
}

Emissions: {
  CO2: ['Carbon dioxide emissions.', '#000000']}

# Model Agriculture & Crop yield  parameters:
################################################################
# AgriculturalResidualCapacityRetirementYears
AgriculturalResidualCapacityRetirementYears: 15

CropYieldFactors: { #keep, change names to match clustering
    RAP: 1,
    MZE: 1,
    WHT: 1,
    SWI: 1,
    OTH: 1
}

AgriculturalResidualCapacity: {
   RAPHIBC:  5,
   RAPHRBC:  2,
   RAPIIBC:  5,
   RAPIRBC:  6,
   MZEHIBC:  5,
   MZEHRBC:  2,
   MZEIIBC:  5,
   MZEIRBC:  6,
   WHTHIBC:  5,
   WHTHRBC:  2,
   WHTIIBC:  5,
   WHTIRBC:  6,
   SWIHIBC:  5,
   SWIHRBC:  2,
   SWIIIBC:  5,
   SWIIRBC:  6,
   OTHHIBC:  5,
   OTHHRBC:  2,
   OTHIIBC:  5,
   OTHIRBC:  6
}

AgriculturalCapitalCost: [
    ['PWRBSWCANAB01', '3600'],
    ['PWRBSWCANAR01', '3500'],
    ['PWRBSWCANBC01', '3400'],
    ['PWRBSWCANMB01', '3300'],
    ['PWRBSWCANNL01', '3200'],
    ['PWRBSWCANNO01', '3100'],
    ['PWRBSWCANON01', '3000'],
    ['PWRBSWCANQC01', '2900'],
    ['PWRBSWCANSK01', '2800']
]

