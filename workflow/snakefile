import os
import yaml
from snakemake.utils import min_version
min_version("8.0")

# configuration

configfile: 'config/config.yaml'

# helper functions

def get_otoole_data(otoole_config: str, var: str) -> list[str]:
    """Gets parameter/result files to be created"""

    assert var in ("param", "result", "set")

    with open(otoole_config) as f:
        otoole = yaml.safe_load(f)

    results = [x for x in otoole if otoole[x]["type"] == var]

    # no result calcualtions
    missing = [
        # storage investment not guaranteed
        "NewStorageCapacity",
        "TotalDiscountedStorageCost",
        "SalvageValueStorage",
        "CapitalInvestmentStorage",
        "DiscountedCapitalInvestmentStorage",
        "DiscountedSalvageValueStorage",
        "DiscountedCostByStorage",
        # storage levels not guaranteed
        "StorageLevelSeasonStart",
        "StorageLevelSeasonFinish",
        "StorageLevelYearStart",
        "StorageLevelYearFinish",
        "StorageLevelDayTypeStart",
        "StorageLevelDayTypeFinish",
        "StorageLowerLimit",
        "StorageUpperLimit",
        "CapitalInvestmentStorage",
        "DiscountedCapitalInvestmentStorage",
        "DiscountedCostByStorage",
        "DiscountedSalvageValueStorage",
        "NetChargeWithinDay",
        "NetChargeWithinYear",
        # other missing calcs
        "NumberOfNewTechnologyUnits",
        "Trade",
        "ModelPeriodEmissions",
    ]

    return [x for x in results if x not in missing]

# constants

OTOOLE_YAML = "workflow/submodules/osemosys_global/resources/otoole.yaml"
OTOOLE_PARAMS = get_otoole_data(OTOOLE_YAML, "param")
OTOOLE_RESULTS = get_otoole_data(OTOOLE_YAML, "result")

module other_workflow:
    # here, plain paths, URLs and the special markers for code hosting providers (see below) are possible.
    snakefile: "submodules/osemosys_global/workflow/snakefile"
    prefix: "submodules/osemosys_global"

use rule generate_input_data from other_workflow as all with:
    message:
        "Generating input CSV data..."
    input:
        csv_files = expand('results/{scenario}/data/{csv}.csv', scenario=config['scenario'], csv=OTOOLE_PARAMS),
